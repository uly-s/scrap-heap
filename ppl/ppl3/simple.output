Terminals unused in grammar

   T_NUM


Grammar

    0 $accept: program T_EOF

    1 program: stmt_list T_SEMICOLON

    2 stmt_list: stmt_list T_SEMICOLON stmt
    3          | stmt

    4 stmt: assignment
    5     | read
    6     | write
    7     | declaration

    8 assignment: varref T_ASSIGN a_expr

    9 declaration: datatype T_ID

   10 datatype: T_DT_INT
   11         | T_DT_FLOAT

   12 a_expr: a_expr T_ADD a_term
   13       | a_expr T_SUB a_term
   14       | a_term

   15 a_term: a_term T_MUL a_fact
   16       | a_term T_DIV a_fact
   17       | a_fact

   18 a_fact: varref
   19       | T_INTEGER
   20       | T_FLOAT
   21       | '(' a_expr ')'
   22       | T_SUB a_fact
   23       | T_LITERAL_STR

   24 varref: T_ID

   25 read: T_READ varlist

   26 write: T_WRITE expr_list

   27 varlist: varlist T_COMMA varref
   28        | varref

   29 expr_list: expr_list T_COMMA a_expr
   30          | a_expr


Terminals, with rules where they appear

T_EOF (0) 0
'(' (40) 21
')' (41) 21
error (256)
T_NUM (258)
T_ASSIGN (259) 8
T_ADD (260) 12
T_SUB (261) 13 22
T_MUL (262) 15
T_DIV (263) 16
T_DT_INT (264) 10
T_DT_FLOAT (265) 11
T_LITERAL_STR (266) 23
T_READ (267) 25
T_WRITE (268) 26
T_SEMICOLON (269) 1 2
T_COMMA (270) 27 29
T_ID (271) 9 24
T_INTEGER (272) 19
T_FLOAT (273) 20


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
stmt_list (23)
    on left: 2 3, on right: 1 2
stmt (24)
    on left: 4 5 6 7, on right: 2 3
assignment (25)
    on left: 8, on right: 4
declaration (26)
    on left: 9, on right: 7
datatype (27)
    on left: 10 11, on right: 9
a_expr (28)
    on left: 12 13 14, on right: 8 12 13 21 29 30
a_term (29)
    on left: 15 16 17, on right: 12 13 14 15 16
a_fact (30)
    on left: 18 19 20 21 22 23, on right: 15 16 17 22
varref (31)
    on left: 24, on right: 8 18 27 28
read (32)
    on left: 25, on right: 5
write (33)
    on left: 26, on right: 6
varlist (34)
    on left: 27 28, on right: 25 27
expr_list (35)
    on left: 29 30, on right: 26 29


State 0

    0 $accept: . program T_EOF

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5

    program      go to state 6
    stmt_list    go to state 7
    stmt         go to state 8
    assignment   go to state 9
    declaration  go to state 10
    datatype     go to state 11
    varref       go to state 12
    read         go to state 13
    write        go to state 14


State 1

   10 datatype: T_DT_INT .

    $default  reduce using rule 10 (datatype)


State 2

   11 datatype: T_DT_FLOAT .

    $default  reduce using rule 11 (datatype)


State 3

   25 read: T_READ . varlist

    T_ID  shift, and go to state 5

    varref   go to state 15
    varlist  go to state 16


State 4

   26 write: T_WRITE . expr_list

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_expr     go to state 22
    a_term     go to state 23
    a_fact     go to state 24
    varref     go to state 25
    expr_list  go to state 26


State 5

   24 varref: T_ID .

    $default  reduce using rule 24 (varref)


State 6

    0 $accept: program . T_EOF

    T_EOF  shift, and go to state 27


State 7

    1 program: stmt_list . T_SEMICOLON
    2 stmt_list: stmt_list . T_SEMICOLON stmt

    T_SEMICOLON  shift, and go to state 28


State 8

    3 stmt_list: stmt .

    $default  reduce using rule 3 (stmt_list)


State 9

    4 stmt: assignment .

    $default  reduce using rule 4 (stmt)


State 10

    7 stmt: declaration .

    $default  reduce using rule 7 (stmt)


State 11

    9 declaration: datatype . T_ID

    T_ID  shift, and go to state 29


State 12

    8 assignment: varref . T_ASSIGN a_expr

    T_ASSIGN  shift, and go to state 30


State 13

    5 stmt: read .

    $default  reduce using rule 5 (stmt)


State 14

    6 stmt: write .

    $default  reduce using rule 6 (stmt)


State 15

   28 varlist: varref .

    $default  reduce using rule 28 (varlist)


State 16

   25 read: T_READ varlist .
   27 varlist: varlist . T_COMMA varref

    T_COMMA  shift, and go to state 31

    $default  reduce using rule 25 (read)


State 17

   22 a_fact: T_SUB . a_fact

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_fact  go to state 32
    varref  go to state 25


State 18

   23 a_fact: T_LITERAL_STR .

    $default  reduce using rule 23 (a_fact)


State 19

   19 a_fact: T_INTEGER .

    $default  reduce using rule 19 (a_fact)


State 20

   20 a_fact: T_FLOAT .

    $default  reduce using rule 20 (a_fact)


State 21

   21 a_fact: '(' . a_expr ')'

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_expr  go to state 33
    a_term  go to state 23
    a_fact  go to state 24
    varref  go to state 25


State 22

   12 a_expr: a_expr . T_ADD a_term
   13       | a_expr . T_SUB a_term
   30 expr_list: a_expr .

    T_ADD  shift, and go to state 34
    T_SUB  shift, and go to state 35

    $default  reduce using rule 30 (expr_list)


State 23

   14 a_expr: a_term .
   15 a_term: a_term . T_MUL a_fact
   16       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 36
    T_DIV  shift, and go to state 37

    $default  reduce using rule 14 (a_expr)


State 24

   17 a_term: a_fact .

    $default  reduce using rule 17 (a_term)


State 25

   18 a_fact: varref .

    $default  reduce using rule 18 (a_fact)


State 26

   26 write: T_WRITE expr_list .
   29 expr_list: expr_list . T_COMMA a_expr

    T_COMMA  shift, and go to state 38

    $default  reduce using rule 26 (write)


State 27

    0 $accept: program T_EOF .

    $default  accept


State 28

    1 program: stmt_list T_SEMICOLON .
    2 stmt_list: stmt_list T_SEMICOLON . stmt

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5

    $default  reduce using rule 1 (program)

    stmt         go to state 39
    assignment   go to state 9
    declaration  go to state 10
    datatype     go to state 11
    varref       go to state 12
    read         go to state 13
    write        go to state 14


State 29

    9 declaration: datatype T_ID .

    $default  reduce using rule 9 (declaration)


State 30

    8 assignment: varref T_ASSIGN . a_expr

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_expr  go to state 40
    a_term  go to state 23
    a_fact  go to state 24
    varref  go to state 25


State 31

   27 varlist: varlist T_COMMA . varref

    T_ID  shift, and go to state 5

    varref  go to state 41


State 32

   22 a_fact: T_SUB a_fact .

    $default  reduce using rule 22 (a_fact)


State 33

   12 a_expr: a_expr . T_ADD a_term
   13       | a_expr . T_SUB a_term
   21 a_fact: '(' a_expr . ')'

    T_ADD  shift, and go to state 34
    T_SUB  shift, and go to state 35
    ')'    shift, and go to state 42


State 34

   12 a_expr: a_expr T_ADD . a_term

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_term  go to state 43
    a_fact  go to state 24
    varref  go to state 25


State 35

   13 a_expr: a_expr T_SUB . a_term

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_term  go to state 44
    a_fact  go to state 24
    varref  go to state 25


State 36

   15 a_term: a_term T_MUL . a_fact

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_fact  go to state 45
    varref  go to state 25


State 37

   16 a_term: a_term T_DIV . a_fact

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_fact  go to state 46
    varref  go to state 25


State 38

   29 expr_list: expr_list T_COMMA . a_expr

    T_SUB          shift, and go to state 17
    T_LITERAL_STR  shift, and go to state 18
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 19
    T_FLOAT        shift, and go to state 20
    '('            shift, and go to state 21

    a_expr  go to state 47
    a_term  go to state 23
    a_fact  go to state 24
    varref  go to state 25


State 39

    2 stmt_list: stmt_list T_SEMICOLON stmt .

    $default  reduce using rule 2 (stmt_list)


State 40

    8 assignment: varref T_ASSIGN a_expr .
   12 a_expr: a_expr . T_ADD a_term
   13       | a_expr . T_SUB a_term

    T_ADD  shift, and go to state 34
    T_SUB  shift, and go to state 35

    $default  reduce using rule 8 (assignment)


State 41

   27 varlist: varlist T_COMMA varref .

    $default  reduce using rule 27 (varlist)


State 42

   21 a_fact: '(' a_expr ')' .

    $default  reduce using rule 21 (a_fact)


State 43

   12 a_expr: a_expr T_ADD a_term .
   15 a_term: a_term . T_MUL a_fact
   16       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 36
    T_DIV  shift, and go to state 37

    $default  reduce using rule 12 (a_expr)


State 44

   13 a_expr: a_expr T_SUB a_term .
   15 a_term: a_term . T_MUL a_fact
   16       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 36
    T_DIV  shift, and go to state 37

    $default  reduce using rule 13 (a_expr)


State 45

   15 a_term: a_term T_MUL a_fact .

    $default  reduce using rule 15 (a_term)


State 46

   16 a_term: a_term T_DIV a_fact .

    $default  reduce using rule 16 (a_term)


State 47

   12 a_expr: a_expr . T_ADD a_term
   13       | a_expr . T_SUB a_term
   29 expr_list: expr_list T_COMMA a_expr .

    T_ADD  shift, and go to state 34
    T_SUB  shift, and go to state 35

    $default  reduce using rule 29 (expr_list)
